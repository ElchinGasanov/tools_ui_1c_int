
// Этот плагин выполняет переименование переменных если это возможно.
// При возникновении конфликтов регистрирует ошибку, которая указывает на конфликтную переменную.

// Пример ожидаемой структуры параметров (json):
// {"СтароеИмя1": "НовоеИмя1", "СтароеИмя2": "НовоеИмя2"}

Перем Типы;
Перем ТаблицаОшибок;
Перем ТаблицаЗамен;
Перем Директивы;

Перем ПрефиксПеременныхИПроцедур;
Перем ОписаниеКонфигурации;
Перем МассивИменОбщихМодулей;

Процедура Открыть(Парсер, Параметры) Экспорт
	
	Если Параметры = Неопределено Тогда
		ВызватьИсключение "Не указаны параметры плагина 'ПереименованиеПеременных'";
	КонецЕсли; 
	
	Типы = Парсер.Типы();
	ТаблицаОшибок = Парсер.ТаблицаОшибок();
	ТаблицаЗамен = Парсер.ТаблицаЗамен();
	Директивы = Парсер.Директивы();
	
	ПрефиксПеременныхИПроцедур=Параметры.ПрефиксПеременныхИПроцедур;
	ОписаниеКонфигурации=Параметры.ОписаниеКонфигурации;
	
	МассивИменОбщихМодулей=Новый Массив;
	Для Каждого ОбщийМодуль ИЗ ОписаниеКонфигурации.ОбщиеМодули Цикл
		МассивИменОбщихМодулей.Добавить(НРег(ОбщийМодуль.Имя));
	КонецЦикла;
КонецПроцедуры // Открыть()

Функция Закрыть() Экспорт
	Возврат Неопределено;
КонецФункции // Закрыть()

Функция Подписки() Экспорт
	Перем Подписки;
	Подписки = Новый Массив;
	Подписки.Добавить("ПосетитьВыражениеИдентификатор");
	Возврат Подписки;
КонецФункции // Подписки()

#Область РеализацияПодписок

Процедура ПосетитьВыражениеИдентификатор(Объявление) Экспорт
	Если НРег(Объявление.Голова.Имя)<>"вычислить" Тогда
		Возврат;
	КонецЕсли;

	Если Объявление.Аргументы.Количество()<>1 Тогда
		Возврат;
	КонецЕсли;

	Аргумент=Объявление.Аргументы[0];
	Если Аргумент.Тип<>Типы.ВыражениеСтроковое Тогда
		Возврат;
	КонецЕсли;

	Если Аргумент.Элементы.Количество()<>1 Тогда
		Возврат;
	КонецЕсли;

	ЭлементАргумента= Аргумент.Элементы[0];
	Если ЭлементАргумента.Тип<>Типы.ВыражениеЛитерал Тогда
		Возврат;
	КонецЕсли;

	Если ЭлементАргумента.Вид<>"Строка" Тогда
		Возврат;
	КонецЕсли;
	Если МассивИменОбщихМодулей.Найти(НРег(ЭлементАргумента.Значение))=Неопределено Тогда
		Возврат;
	КонецЕсли;
	Замена(ПрефиксПеременныхИПроцедур + "ОбщийМодульПоИмени("""+ЭлементАргумента.Значение+""")",Объявление.Начало,Объявление.Конец);
КонецПроцедуры

#КонецОбласти // РеализацияПодписок

Процедура Ошибка(Текст, Начало, Конец = Неопределено, ЕстьЗамена = Ложь)
	Ошибка = ТаблицаОшибок.Добавить();
	Ошибка.Источник = "УстановитьДирективыУМетодов";
	Ошибка.Текст = Текст;
	Ошибка.ПозицияНачала = Начало.Позиция;
	Ошибка.НомерСтрокиНачала = Начало.НомерСтроки;
	Ошибка.НомерКолонкиНачала = Начало.НомерКолонки;
	Если Конец = Неопределено Или Конец = Начало Тогда
		Ошибка.ПозицияКонца = Начало.Позиция + Начало.Длина;
		Ошибка.НомерСтрокиКонца = Начало.НомерСтроки;
		Ошибка.НомерКолонкиКонца = Начало.НомерКолонки + Начало.Длина;
	Иначе
		Ошибка.ПозицияКонца = Конец.Позиция + Конец.Длина;
		Ошибка.НомерСтрокиКонца = Конец.НомерСтроки;
		Ошибка.НомерКолонкиКонца = Конец.НомерКолонки + Конец.Длина;
	КонецЕсли;
	Ошибка.ЕстьЗамена = ЕстьЗамена;
КонецПроцедуры

Процедура Замена(Текст, Начало, Конец = Неопределено)
	НоваяЗамена = ТаблицаЗамен.Добавить();
	НоваяЗамена.Источник = "УстановитьДирективыУМетодов";
	НоваяЗамена.Текст = Текст;
	НоваяЗамена.Позиция = Начало.Позиция;
	Если Конец = Неопределено Тогда
		НоваяЗамена.Длина = Начало.Длина;
	Иначе
		НоваяЗамена.Длина = Конец.Позиция + Конец.Длина - Начало.Позиция;
	КонецЕсли;
КонецПроцедуры

Процедура Вставка(Текст, Позиция)
	НоваяЗамена = ТаблицаЗамен.Добавить();
	НоваяЗамена.Источник = "УстановитьДирективыУМетодов";
	НоваяЗамена.Текст = Текст;
	НоваяЗамена.Позиция = Позиция;
	НоваяЗамена.Длина = 0;
КонецПроцедуры