// BSLLS-off

// Этот плагин выполняет переименование переменных если это возможно.
// При возникновении конфликтов регистрирует ошибку, которая указывает на конфликтную переменную.

// Пример ожидаемой структуры параметров (json):
// {"СтароеИмя1": "НовоеИмя1", "СтароеИмя2": "НовоеИмя2"}

Перем Токены;
Перем Типы;
Перем ТаблицаОшибок;
Перем ТаблицаЗамен;
Перем Директивы;

Перем Результат;

Перем МассивМетодов;
Перем Версия;
Перем ВариантСборки;
Перем ИмяФайлаСкачки;

Процедура Открыть(Парсер, Параметры) Экспорт
	Типы = Парсер.Типы();
	ТаблицаОшибок = Парсер.ТаблицаОшибок();
	ТаблицаЗамен = Парсер.ТаблицаЗамен();
	Директивы = Парсер.Директивы();
	Токены = Парсер.Токены();
	
	Результат = Новый Массив;

	ВариантСборки=Параметры.ВариантСборки;
	Версия=Параметры.Версия;
	ВКонфигурацию=Параметры.ВКонфигурацию;

	Если ВКонфигурацию=Неопределено Тогда
		Расширение="";
	ИначеЕсли ВКонфигурацию Тогда
		Расширение=".cf";
	Иначе
		Расширение=".cfe";
	КонецЕсли;
	ИмяФайлаСкачки=ВариантСборки.ИмяФайла+Расширение;
КонецПроцедуры // Открыть()

Функция Закрыть() Экспорт
	Возврат СтрСоединить(Результат);
КонецФункции // Закрыть()

Функция Подписки() Экспорт
	Перем Подписки;
	Подписки = Новый Массив;
	Подписки.Добавить("ПосетитьОбъявлениеМетода");
	Возврат Подписки;
КонецФункции // Подписки()

#Область РеализацияПодписок

Процедура ПосетитьОбъявлениеМетода(Описание) Экспорт
	СтрокаВставки="";
	Если НРег(Описание.Сигнатура.Имя) = "version" Тогда
		СтрокаВставки = "Return """+Версия+""";";
	ИначеЕсли НРег(Описание.Сигнатура.Имя) = "distributiontype" Тогда
		СтрокаВставки = "Return """+ВариантСборки.Имя+""";";
	ИначеЕсли НРег(Описание.Сигнатура.Имя) = "downloadfilename" Тогда
		СтрокаВставки = "Return """+ИмяФайлаСкачки+""";";
	КонецЕсли;

	Если Не ЗначениеЗаполнено(СтрокаВставки) Тогда
		Возврат;
	КонецЕсли;

	Если Описание.Операторы.Количество()>0 Тогда
		ЗаменаПлюс1(СтрокаВставки, Описание.Операторы[0].Начало, Описание.Операторы[Описание.Операторы.Количество()-1].Конец);
	Иначе
		СтрокаВставки=СтрокаВставки+Символы.ПС;
		Вставка(СтрокаВставки, Описание.Конец.Позиция);
	КонецЕсли;

КонецПроцедуры

#КонецОбласти // РеализацияПодписок

Процедура Ошибка(Текст, Начало, Конец = Неопределено, ЕстьЗамена = Ложь)
	Ошибка = ТаблицаОшибок.Добавить();
	Ошибка.Источник = "УстановкаВариантаСборки";
	Ошибка.Текст = Текст;
	Ошибка.ПозицияНачала = Начало.Позиция;
	Ошибка.НомерСтрокиНачала = Начало.НомерСтроки;
	Ошибка.НомерКолонкиНачала = Начало.НомерКолонки;
	Если Конец = Неопределено Или Конец = Начало Тогда
		Ошибка.ПозицияКонца = Начало.Позиция + Начало.Длина;
		Ошибка.НомерСтрокиКонца = Начало.НомерСтроки;
		Ошибка.НомерКолонкиКонца = Начало.НомерКолонки + Начало.Длина;
	Иначе
		Ошибка.ПозицияКонца = Конец.Позиция + Конец.Длина;
		Ошибка.НомерСтрокиКонца = Конец.НомерСтроки;
		Ошибка.НомерКолонкиКонца = Конец.НомерКолонки + Конец.Длина;
	КонецЕсли;
	Ошибка.ЕстьЗамена = ЕстьЗамена;
КонецПроцедуры

Процедура Замена(Текст, Начало, Конец = Неопределено)
	НоваяЗамена = ТаблицаЗамен.Добавить();
	НоваяЗамена.Источник = "УстановкаВариантаСборки";
	НоваяЗамена.Текст = Текст;
	НоваяЗамена.Позиция = Начало.Позиция;
	Если Конец = Неопределено Тогда
		НоваяЗамена.Длина = Начало.Длина;
	Иначе
		НоваяЗамена.Длина = Конец.Позиция + Конец.Длина - Начало.Позиция;
	КонецЕсли;
КонецПроцедуры

Процедура ЗаменаПлюс1(Текст, Начало, Конец = Неопределено)
	НоваяЗамена = ТаблицаЗамен.Добавить();
	НоваяЗамена.Источник = "УстановкаВариантаСборки";
	НоваяЗамена.Текст = Текст;
	НоваяЗамена.Позиция = Начало.Позиция;
	Если Конец = Неопределено Тогда
		НоваяЗамена.Длина = Начало.Длина+1;
	Иначе
		НоваяЗамена.Длина = Конец.Позиция + Конец.Длина - Начало.Позиция+1;
	КонецЕсли;
КонецПроцедуры

Процедура Вставка(Текст, Позиция)
	НоваяЗамена = ТаблицаЗамен.Добавить();
	НоваяЗамена.Источник = "УстановкаВариантаСборки";
	НоваяЗамена.Текст = Текст;
	НоваяЗамена.Позиция = Позиция;
	НоваяЗамена.Длина = 0;
КонецПроцедуры